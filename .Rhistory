# Cargar las bibliotecas necesarias
library(dplyr)
# Leer los archivos .csv
file1 <- read.csv("Scripts/Lonsdorf_results_2024-07-05_12-00-11_por_defecto.csv")
file2 <- read.csv("Scripts/Lonsdorf_results_2024-07-05_14-23-02_125.csv")
# Verificar que ambos archivos tienen la misma estructura
if (nrow(file1) != 164 || ncol(file1) != 4) {
stop("El archivo 1 no tiene 164 filas y 4 columnas")
}
if (nrow(file2) != 164 || ncol(file2) != 4) {
stop("El archivo 2 no tiene 164 filas y 4 columnas")
}
# Comprobar si las columnas son las mismas
if (!all(colnames(file1) == colnames(file2))) {
stop("Los nombres de las columnas no coinciden")
}
# Comparar las filas y columnas de ambos archivos
comparison <- file1 == file2
# Resumir las diferencias
differences <- data.frame(
row = rep(1:164, each = 4),
column = rep(colnames(file1), times = 164),
file1_value = unlist(file1),
file2_value = unlist(file2),
match = as.vector(comparison)
)
# Mostrar solo las filas con diferencias
differences_with_issues <- differences %>% filter(!match)
# Mostrar el resumen de las diferencias
print(differences_with_issues)
# Guardar el resumen de las diferencias en un archivo .csv
write.csv(differences_with_issues, "diferencias.csv", row.names = FALSE)
# Cargar las librerías necesarias
library(dplyr)
# Leer los archivos CSV (asegúrate de cambiar 'file1.csv' y 'file2.csv' por los nombres de tus archivos)
file1 <- "Scripts/Lonsdorf_results_2024-07-05_12-00-11_por_defecto.csv"
file2 <- "Scripts/Lonsdorf_results_2024-07-05_14-23-02_125.csv"
# Leer los datos de los archivos CSV, seleccionando solo las primeras 164 filas
data1 <- read.csv(file1, nrows = 164)
data2 <- read.csv(file2, nrows = 164)
# Seleccionar las dos últimas columnas de ambos archivos
columns_to_compare_file1 <- data1[, (ncol(data1)-1):ncol(data1)]
columns_to_compare_file2 <- data2[, (ncol(data2)-1):ncol(data2)]
# Comparar las dos últimas columnas
comparison <- columns_to_compare_file1 == columns_to_compare_file2
# Convertir a un data frame para una mejor visualización
comparison_df <- as.data.frame(comparison)
# Asignar nombres significativos a las columnas de comparación
colnames(comparison_df) <- c("Comparison_Column_5", "Comparison_Column_6")
# Imprimir el resultado de la comparación
print(comparison_df)
# Cargar las librerías necesarias
library(ggplot2)
library(dplyr)
# Definir los nombres de los archivos .csv
file1 <- "Scripts/Lonsdorf_results_2024-07-05_12-00-11_por_defecto.csv"
file2 <- "Scripts/Lonsdorf_results_2024-07-05_14-23-02_125.csv"
# Leer los archivos .csv
data1 <- read.csv(file1)
data2 <- read.csv(file2)
# Asegurarse de que los archivos tienen al menos 6 columnas y 164 filas
if(ncol(data1) < 6 | nrow(data1) < 164 | ncol(data2) < 6 | nrow(data2) < 164) {
stop("Ambos archivos deben tener al menos 6 columnas y 164 filas.")
}
# Seleccionar las dos últimas columnas de los primeros 164 filas
data1_selected <- data1[1:164, (ncol(data1)-1):ncol(data1)]
data2_selected <- data2[1:164, (ncol(data2)-1):ncol(data2)]
# Añadir una columna para identificar el origen de los datos
data1_selected$source <- "Archivo 1"
data2_selected$source <- "Archivo 2"
# Combinar los dos dataframes
combined_data <- rbind(data1_selected, data2_selected)
# Renombrar las columnas para facilidad de uso
colnames(combined_data) <- c("Var1", "Var2", "Source")
# Crear la nube de puntos
ggplot(combined_data, aes(x = Var1, y = Var2, color = Source)) +
geom_point() +
labs(title = "Nube de Puntos Comparativa",
x = "Variable 1",
y = "Variable 2") +
theme_minimal()
# Cargar las librerías necesarias
library(ggplot2)
library(dplyr)
# Definir los nombres de los archivos .csv
file1 <- "Scripts/Lonsdorf_results_2024-07-05_12-00-11_por_defecto.csv"
file2 <- "Scripts/Lonsdorf_results_2024-07-05_14-23-02_125.csv"
# Leer los archivos .csv
data1 <- read.csv(file1)
data2 <- read.csv(file2)
# Asegurarse de que los archivos tienen al menos 6 columnas y 164 filas
if(ncol(data1) < 6 | nrow(data1) < 164 | ncol(data2) < 6 | nrow(data2) < 164) {
stop("Ambos archivos deben tener al menos 6 columnas y 164 filas.")
}
# Seleccionar las primeras 164 filas y las dos últimas columnas
data1_selected <- data1[1:164, (ncol(data1)-1):ncol(data1)]
data2_selected <- data2[1:164, (ncol(data2)-1):ncol(data2)]
# Renombrar las columnas para claridad
colnames(data1_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
colnames(data2_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
# Calcular Lonsdorf_Medio
data1_selected <- data1_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
data2_selected <- data2_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
# Crear un dataframe combinado para la comparación
comparison_data <- data.frame(
Lonsdorf_Medio_Archivo1 = data1_selected$Lonsdorf_Medio,
Lonsdorf_Medio_Archivo2 = data2_selected$Lonsdorf_Medio
)
# Crear la nube de puntos
ggplot(comparison_data, aes(x = Lonsdorf_Medio_Archivo1, y = Lonsdorf_Medio_Archivo2)) +
geom_point() +
labs(title = "Comparación de Lonsdorf_Medio entre Archivos",
x = "Lonsdorf_Medio Archivo 1",
y = "Lonsdorf_Medio Archivo 2") +
theme_minimal()
# Cargar las librerías necesarias
library(ggplot2)
library(dplyr)
# Definir los nombres de los archivos .csv
file1 <- "Scripts/Lonsdorf_results_2024-07-05_12-00-11_por_defecto.csv"
file2 <- "Scripts/Lonsdorf_results_2024-07-05_14-23-02_125.csv"
# Leer los archivos .csv
data1 <- read.csv(file1)
data2 <- read.csv(file2)
# Asegurarse de que los archivos tienen al menos 6 columnas y 164 filas
if(ncol(data1) < 6 | nrow(data1) < 164 | ncol(data2) < 6 | nrow(data2) < 164) {
stop("Ambos archivos deben tener al menos 6 columnas y 164 filas.")
}
# Seleccionar las primeras 164 filas y las dos últimas columnas
data1_selected <- data1[1:164, (ncol(data1)-1):ncol(data1)]
data2_selected <- data2[1:164, (ncol(data2)-1):ncol(data2)]
# Renombrar las columnas para claridad
colnames(data1_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
colnames(data2_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
# Calcular Lonsdorf_Medio
data1_selected <- data1_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
data2_selected <- data2_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
# Crear un dataframe combinado para la comparación
comparison_data <- data.frame(
Lonsdorf_Medio_Archivo1 = data1_selected$Lonsdorf_Medio,
Lonsdorf_Medio_Archivo2 = data2_selected$Lonsdorf_Medio
)
# Calcular la correlación de Pearson
correlation <- cor(comparison_data$Lonsdorf_Medio_Archivo1, comparison_data$Lonsdorf_Medio_Archivo2)
# Crear la nube de puntos
ggplot(comparison_data, aes(x = Lonsdorf_Medio_Archivo1, y = Lonsdorf_Medio_Archivo2)) +
geom_point() +
labs(title = paste("Comparación de Lonsdorf_Medio entre Archivos\nCorrelación de Pearson:", round(correlation, 2)),
x = "Lonsdorf_Medio Archivo 1",
y = "Lonsdorf_Medio Archivo 2") +
theme_minimal()
# Cargar las librerías necesarias
library(ggplot2)
library(dplyr)
# Definir los nombres de los archivos .csv
file1 <- "Scripts/Lonsdorf_results_2024-07-05_12-00-11_por_defecto.csv"
file2 <- "Scripts/Lonsdorf_results_2024-07-05_14-23-02_125.csv"
# Leer los archivos .csv
data1 <- read.csv(file1)
data2 <- read.csv(file2)
# Asegurarse de que los archivos tienen al menos 6 columnas y 164 filas
if(ncol(data1) < 6 | nrow(data1) < 164 | ncol(data2) < 6 | nrow(data2) < 164) {
stop("Ambos archivos deben tener al menos 6 columnas y 164 filas.")
}
# Seleccionar las primeras 164 filas y las dos últimas columnas
data1_selected <- data1[1:164, (ncol(data1)-1):ncol(data1)]
data2_selected <- data2[1:164, (ncol(data2)-1):ncol(data2)]
# Renombrar las columnas para claridad
colnames(data1_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
colnames(data2_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
# Calcular Lonsdorf_Medio
data1_selected <- data1_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
data2_selected <- data2_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
# Crear un dataframe combinado para la comparación
comparison_data <- data.frame(
Lonsdorf_Medio_Archivo1 = data1_selected$Lonsdorf_Medio,
Lonsdorf_Medio_Archivo2 = data2_selected$Lonsdorf_Medio
)
# Calcular la correlación de Pearson
correlation <- cor(comparison_data$Lonsdorf_Medio_Archivo1, comparison_data$Lonsdorf_Medio_Archivo2)
# Crear la nube de puntos
ggplot(comparison_data, aes(x = Lonsdorf_Medio_Archivo1, y = Lonsdorf_Medio_Archivo2)) +
geom_point() +
labs(title = paste("Comparación de Lonsdorf_Medio entre Archivos\nCorrelación de Pearson:", round(correlation, 2)),
x = "Lonsdorf_Medio Archivo 1",
y = "Lonsdorf_Medio Archivo 2") +
theme_minimal()
# Cargar las librerías necesarias
library(ggplot2)
library(dplyr)
# Definir los nombres de los archivos .csv
file1 <- "Scripts/Lonsdorf_results_2024-07-05_12-00-11_por_defecto.csv"
file2 <- "Scripts/Lonsdorf_results_2024-07-05_14-23-02_125.csv"
# Leer los archivos .csv
data1 <- read.csv(file1)
data2 <- read.csv(file2)
# Asegurarse de que los archivos tienen al menos 6 columnas y 164 filas
if(ncol(data1) < 6 | nrow(data1) < 164 | ncol(data2) < 6 | nrow(data2) < 164) {
stop("Ambos archivos deben tener al menos 6 columnas y 164 filas.")
}
# Seleccionar las primeras 164 filas y las dos últimas columnas
data1_selected <- data1[1:164, (ncol(data1)-1):ncol(data1)]
data2_selected <- data2[1:164, (ncol(data2)-1):ncol(data2)]
# Renombrar las columnas para claridad
colnames(data1_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
colnames(data2_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
# Calcular Lonsdorf_Medio
data1_selected <- data1_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
data2_selected <- data2_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
# Crear un dataframe combinado para la comparación
comparison_data <- data.frame(
Lonsdorf_Medio_Archivo1 = data1_selected$Lonsdorf_Medio,
Lonsdorf_Medio_Archivo2 = data2_selected$Lonsdorf_Medio
)
# Calcular la correlación de Pearson
correlation <- cor(comparison_data$Lonsdorf_Medio_Archivo1, comparison_data$Lonsdorf_Medio_Archivo2)
# Crear la nube de puntos
scatter_plot <- ggplot(comparison_data, aes(x = Lonsdorf_Medio_Archivo1, y = Lonsdorf_Medio_Archivo2)) +
geom_point() +
labs(title = "Comparación de Lonsdorf_Medio entre Archivos",
x = "Lonsdorf_Medio Archivo 1",
y = "Lonsdorf_Medio Archivo 2") +
theme_minimal()
# Crear el gráfico de correlación
correlation_plot <- ggplot() +
geom_text(aes(x = 1, y = 1, label = paste("Correlación de Pearson:", round(correlation, 2))), size = 6) +
xlim(0.5, 1.5) + ylim(0.5, 1.5) +
theme_void() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Correlación de Pearson")
# Mostrar ambos gráficos
print(scatter_plot)
print(correlation_plot)
# Cargar las librerías necesarias
library(ggplot2)
library(dplyr)
# Definir los nombres de los archivos .csv
file1 <- "Scripts/Lonsdorf_results_2024-07-05_12-00-11_por_defecto.csv"
file2 <- "Scripts/Lonsdorf_results_2024-07-05_14-23-02_125.csv"
# Leer los archivos .csv
data1 <- read.csv(file1)
data2 <- read.csv(file2)
# Asegurarse de que los archivos tienen al menos 6 columnas y 164 filas
if(ncol(data1) < 6 | nrow(data1) < 164 | ncol(data2) < 6 | nrow(data2) < 164) {
stop("Ambos archivos deben tener al menos 6 columnas y 164 filas.")
}
# Seleccionar las primeras 164 filas y las dos últimas columnas
data1_selected <- data1[1:164, (ncol(data1)-1):ncol(data1)]
data2_selected <- data2[1:164, (ncol(data2)-1):ncol(data2)]
# Renombrar las columnas para claridad
colnames(data1_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
colnames(data2_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
# Calcular Lonsdorf_Medio
data1_selected <- data1_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
data2_selected <- data2_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
# Crear un dataframe combinado para la comparación
comparison_data <- data.frame(
Lonsdorf_Medio_Archivo1 = data1_selected$Lonsdorf_Medio,
Lonsdorf_Medio_Archivo2 = data2_selected$Lonsdorf_Medio
)
# Calcular la correlación de Pearson
correlation <- cor(comparison_data$Lonsdorf_Medio_Archivo1, comparison_data$Lonsdorf_Medio_Archivo2)
# Cargar las librerías necesarias
library(ggplot2)
library(dplyr)
# Definir los nombres de los archivos .csv
file1 <- "Scripts/Lonsdorf_results_2024-07-05_12-00-11_por_defecto.csv"
file2 <- "Scripts/Lonsdorf_results_2024-07-05_14-23-02_125.csv"
# Leer los archivos .csv
data1 <- read.csv(file1)
data2 <- read.csv(file2)
# Asegurarse de que los archivos tienen al menos 6 columnas y 164 filas
if(ncol(data1) < 6 | nrow(data1) < 164 | ncol(data2) < 6 | nrow(data2) < 164) {
stop("Ambos archivos deben tener al menos 6 columnas y 164 filas.")
}
# Seleccionar las primeras 164 filas y las dos últimas columnas
data1_selected <- data1[1:164, (ncol(data1)-1):ncol(data1)]
data2_selected <- data2[1:164, (ncol(data2)-1):ncol(data2)]
# Renombrar las columnas para claridad
colnames(data1_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
colnames(data2_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
# Calcular Lonsdorf_Medio
data1_selected <- data1_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
data2_selected <- data2_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
# Crear un dataframe combinado para la comparación
comparison_data <- data.frame(
Lonsdorf_Medio_Archivo1 = data1_selected$Lonsdorf_Medio,
Lonsdorf_Medio_Archivo2 = data2_selected$Lonsdorf_Medio
)
# Calcular la correlación de Pearson
correlation <- cor(comparison_data$Lonsdorf_Medio_Archivo1, comparison_data$Lonsdorf_Medio_Archivo2)
>correlation
# Cargar las librerías necesarias
library(ggplot2)
library(dplyr)
# Definir los nombres de los archivos .csv
file1 <- "Scripts/Lonsdorf_results_2024-07-05_12-00-11_por_defecto.csv"
file2 <- "Scripts/Lonsdorf_results_2024-07-05_14-23-02_125.csv"
# Leer los archivos .csv
data1 <- read.csv(file1)
data2 <- read.csv(file2)
# Asegurarse de que los archivos tienen al menos 6 columnas y 164 filas
if(ncol(data1) < 6 | nrow(data1) < 164 | ncol(data2) < 6 | nrow(data2) < 164) {
stop("Ambos archivos deben tener al menos 6 columnas y 164 filas.")
}
# Seleccionar las primeras 164 filas y las dos últimas columnas
data1_selected <- data1[1:164, (ncol(data1)-1):ncol(data1)]
data2_selected <- data2[1:164, (ncol(data2)-1):ncol(data2)]
# Renombrar las columnas para claridad
colnames(data1_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
colnames(data2_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
# Calcular Lonsdorf_Medio
data1_selected <- data1_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
data2_selected <- data2_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
# Crear un dataframe combinado para la comparación
comparison_data <- data.frame(
Lonsdorf_Medio_Archivo1 = data1_selected$Lonsdorf_Medio,
Lonsdorf_Medio_Archivo2 = data2_selected$Lonsdorf_Medio
)
# Calcular la correlación de Pearson
correlation <- cor(comparison_data$Lonsdorf_Medio_Archivo1, comparison_data$Lonsdorf_Medio_Archivo2)
print(correlation)
# Cargar las librerías necesarias
library(ggplot2)
library(dplyr)
# Definir los nombres de los archivos .csv
file1 <- "Scripts/Lonsdorf_results_2024-07-05_12-00-11_por_defecto.csv"
file2 <- "Scripts/Lonsdorf_results_2024-07-05_14-23-02_125.csv"
# Leer los archivos .csv
data1 <- read.csv(file1)
data2 <- read.csv(file2)
# Asegurarse de que los archivos tienen al menos 6 columnas y 164 filas
if(ncol(data1) < 6 | nrow(data1) < 164 | ncol(data2) < 6 | nrow(data2) < 164) {
stop("Ambos archivos deben tener al menos 6 columnas y 164 filas.")
}
# Seleccionar las primeras 164 filas y las dos últimas columnas
data1_selected <- data1[1:164, (ncol(data1)-1):ncol(data1)]
data2_selected <- data2[1:164, (ncol(data2)-1):ncol(data2)]
# Renombrar las columnas para claridad
colnames(data1_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
colnames(data2_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
# Calcular Lonsdorf_Medio
data1_selected <- data1_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
data2_selected <- data2_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
# Crear un dataframe combinado para la comparación
comparison_data <- data.frame(
Lonsdorf_Medio_Archivo1 = data1_selected$Lonsdorf_Medio,
Lonsdorf_Medio_Archivo2 = data2_selected$Lonsdorf_Medio
)
# Calcular la correlación de Pearson
correlation <- cor(comparison_data$Lonsdorf_Medio_Archivo1, comparison_data$Lonsdorf_Medio_Archivo2, method = 'pearson')
print(correlation)
# Crear la nube de puntos
scatter_plot <- ggplot(comparison_data, aes(x = Lonsdorf_Medio_Archivo1, y = Lonsdorf_Medio_Archivo2)) +
geom_point() +
labs(title = "Comparación de Lonsdorf_Medio entre Archivos",
x = "Lonsdorf_Medio Archivo 1",
y = "Lonsdorf_Medio Archivo 2") +
theme_minimal()
# Crear el gráfico de correlación
correlation_plot <- ggplot() +
geom_text(aes(x = 1, y = 1, label = paste("Correlación de Pearson:", round(correlation, 2))), size = 6) +
xlim(0.5, 1.5) + ylim(0.5, 1.5) +
theme_void() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Correlación de Pearson")
# Mostrar ambos gráficos
print(scatter_plot)
print(correlation_plot)
#Import data into R or create some example
set.seed(150)
data <- data.frame(x = rnorm(50, mean = 50, sd = 10),
random = sample(c(-10:10), 50, replace = TRUE))
data$y <- data$x + data$random
#Calculate the Pearson’s correlation of x and y in data
correlation <- cor(data$x, data$y, method = 'pearson')
# Cargar las librerías necesarias
library(ggplot2)
library(dplyr)
# Definir los nombres de los archivos .csv
file1 <- "Scripts/Lonsdorf_results_2024-07-05_12-00-11_por_defecto.csv"
file2 <- "Scripts/Lonsdorf_results_2024-07-05_14-23-02_125.csv"
# Leer los archivos .csv
data1 <- read.csv(file1)
data2 <- read.csv(file2)
# Asegurarse de que los archivos tienen al menos 6 columnas y 164 filas
if(ncol(data1) < 6 | nrow(data1) < 164 | ncol(data2) < 6 | nrow(data2) < 164) {
stop("Ambos archivos deben tener al menos 6 columnas y 164 filas.")
}
# Seleccionar las primeras 164 filas y las dos últimas columnas
data1_selected <- data1[1:164, (ncol(data1)-1):ncol(data1)]
data2_selected <- data2[1:164, (ncol(data2)-1):ncol(data2)]
# Renombrar las columnas para claridad
colnames(data1_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
colnames(data2_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
# Calcular Lonsdorf_Medio
data1_selected <- data1_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
data2_selected <- data2_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
# Crear un dataframe combinado para la comparación
comparison_data <- data.frame(
Lonsdorf_Medio_Archivo1 = data1_selected$Lonsdorf_Medio,
Lonsdorf_Medio_Archivo2 = data2_selected$Lonsdorf_Medio
)
# Calcular la correlación de Pearson
correlation <- cor(comparison_data$Lonsdorf_Medio_Archivo1, comparison_data$Lonsdorf_Medio_Archivo2, method = 'pearson')
# Cargar las librerías necesarias
library(ggplot2)
library(dplyr)
# Definir los nombres de los archivos .csv
file1 <- "Scripts/Lonsdorf_results_2024-07-09_17-15-47_62_con_5"
file2 <- "Scripts/Lonsdorf_results_2024-07-05_14-23-02_125.csv"
# Leer los archivos .csv
data1 <- read.csv(file1)
# Cargar las librerías necesarias
library(ggplot2)
library(dplyr)
# Definir los nombres de los archivos .csv
file1 <- "Scripts/Lonsdorf_results_2024-07-09_17-15-47_62_con_5"
file2 <- "Scripts/Lonsdorf_results_2024-07-05_14-23-02_125.csv"
# Leer los archivos .csv
data1 <- read.csv(file1)
# Cargar las librerías necesarias
library(ggplot2)
library(dplyr)
# Definir los nombres de los archivos .csv
file1 <- "Scripts/Lonsdorf_results_2024-07-09_17-15-47_62_con_5.csv"
file2 <- "Scripts/Lonsdorf_results_2024-07-05_14-23-02_125.csv"
# Leer los archivos .csv
data1 <- read.csv(file1)
data2 <- read.csv(file2)
# Asegurarse de que los archivos tienen al menos 6 columnas y 164 filas
if(ncol(data1) < 6 | nrow(data1) < 164 | ncol(data2) < 6 | nrow(data2) < 164) {
stop("Ambos archivos deben tener al menos 6 columnas y 164 filas.")
}
# Seleccionar las primeras 164 filas y las dos últimas columnas
data1_selected <- data1[1:164, (ncol(data1)-1):ncol(data1)]
data2_selected <- data2[1:164, (ncol(data2)-1):ncol(data2)]
# Renombrar las columnas para claridad
colnames(data1_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
colnames(data2_selected) <- c("Lonsdorf_big", "Lonsdorf_small")
# Calcular Lonsdorf_Medio
data1_selected <- data1_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
data2_selected <- data2_selected %>%
mutate(Lonsdorf_Medio = 0.5 * Lonsdorf_big + 0.5 * Lonsdorf_small)
# Crear un dataframe combinado para la comparación
comparison_data <- data.frame(
Lonsdorf_Medio_Archivo1 = data1_selected$Lonsdorf_Medio,
Lonsdorf_Medio_Archivo2 = data2_selected$Lonsdorf_Medio
)
# Calcular la correlación de Pearson
correlation <- cor(comparison_data$Lonsdorf_Medio_Archivo1, comparison_data$Lonsdorf_Medio_Archivo2, method = 'pearson')
print(correlation)
# Crear la nube de puntos
scatter_plot <- ggplot(comparison_data, aes(x = Lonsdorf_Medio_Archivo1, y = Lonsdorf_Medio_Archivo2)) +
geom_point() +
labs(title = "Comparación de Lonsdorf_Medio entre Archivos",
x = "Lonsdorf_Medio Archivo 1",
y = "Lonsdorf_Medio Archivo 2") +
theme_minimal()
# Crear el gráfico de correlación
correlation_plot <- ggplot() +
geom_text(aes(x = 1, y = 1, label = paste("Correlación de Pearson:", round(correlation, 2))), size = 6) +
xlim(0.5, 1.5) + ylim(0.5, 1.5) +
theme_void() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Correlación de Pearson")
# Mostrar ambos gráficos
print(scatter_plot)
print(correlation_plot)
